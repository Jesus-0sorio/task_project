name: Build and deploy app to Azure Web App - api-task-project

on:
  push:
    branches:
      - main
      - develop
      - despliegue
  workflow_dispatch:

env:
  AZURE_WEBAPP_PACKAGE_PATH: "publish"

jobs:
  build_back:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release
        working-directory: ./Back-Proyecto

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        working-directory: ./Back-Proyecto

      - name: ls
        working-directory: ${{env.DOTNET_ROOT}}/myapp
        run: ls

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy_back:
    runs-on: ubuntu-latest
    needs: build_back
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'api-project-task'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}

  build_front:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm i
        working-directory: ./Frontend

      - name: Check code lint
        run: npm run lint
        working-directory: ./Frontend

      - name: Build
        run: npm run build
        working-directory: ./Frontend

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: frontend-app
          path: ./Frontend/dist
  
  deploy_front:
    runs-on: ubuntu-latest
    needs: build_front
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: frontend-app

      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.APP_FRONTEND_TOKEN }}
          action: "upload"
          app_location: "./Frontend"
          output_location: "./dist"
        env:
          VITE_BASE_URL: ${{ secrets.VITE_BASE_URL }}
